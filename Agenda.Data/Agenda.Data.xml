<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Agenda.Data</name>
    </assembly>
    <members>
        <member name="T:Agenda.Data.Attributes.AuditIgnoreAttribute">
            <summary>
            Marks a property on a DTO to be excluded from the Audit.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Agenda.Data.Crud.AgendaData">
            <summary>
            Data access.
            </summary>
            <seealso cref="T:Agenda.Data.Crud.IAgendaData"/>
            <summary>
            CRUD operations for Committees.
            </summary>
            <summary>
            CRUD operations for Meetings.
            </summary>
            <summary>
            CRUD operations for Organisations.
            </summary>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.#ctor(Microsoft.Extensions.Logging.ILogger{Agenda.Data.Crud.AgendaData},Agenda.Data.DbContexts.DataContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Crud.AgendaData"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="dataContext">Data Context.</param>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.BeginTransaction(Agenda.Domain.ValueObjects.Enums.AuditEvent,Agenda.Utilities.Models.Whos.IWho)">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.CommitTransactionAsync(Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails)">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.RollbackTransaction">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.Tag(Agenda.Utilities.Models.Whos.IWho,System.String)">
            <summary>
            Returns tag for use with .TagWith().
            </summary>
            <param name="who">Who details.</param>
            <param name="methodName">Method Name.</param>
            <returns>Tag.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.CreateCommitteeAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Committees.ICommittee)">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.GetCommitteeByIdAsync(Agenda.Utilities.Models.Whos.IWho,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.GetCommitteeByIdWithMeetingsAsync(Agenda.Utilities.Models.Whos.IWho,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.HaveCommitteesAsync(Agenda.Utilities.Models.Whos.IWho)">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.UpdateCommitteeAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Committees.ICommittee)">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.CreateMeetingAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Meetings.IMeeting)">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.GetRecentMeetingsMostRecentFirstAsync(Agenda.Utilities.Models.Whos.IWho,System.TimeSpan,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.GetMeetingByIdAsync(Agenda.Utilities.Models.Whos.IWho,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.UpdateMeetingAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Meetings.IMeeting)">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.CreateOrganisationAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Organisations.IOrganisation)">
            <inheritdoc />
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.GetAllOrganisationsAsync(Agenda.Utilities.Models.Whos.IWho)">
            <inheritdoc />
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.GetOrganisationByIdAsync(Agenda.Utilities.Models.Whos.IWho,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.GetOrganisationByIdWithCommitteesAsync(Agenda.Utilities.Models.Whos.IWho,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.HaveOrganisationsAsync(Agenda.Utilities.Models.Whos.IWho)">
            <inheritdoc/>
        </member>
        <member name="M:Agenda.Data.Crud.AgendaData.UpdateOrganisationAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Organisations.IOrganisation)">
            <inheritdoc/>
        </member>
        <member name="T:Agenda.Data.Crud.IAgendaData">
            <summary>
            Data Access Layer - Transactions.
            </summary>
            <seealso cref="T:System.IDisposable" />
            <summary>
            Data access - Committee.
            </summary>
            <summary>
            Data access.
            </summary>
            <summary>
            Data access.
            </summary>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.BeginTransaction(Agenda.Domain.ValueObjects.Enums.AuditEvent,Agenda.Utilities.Models.Whos.IWho)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="auditEvent">Audit Event.</param>
            <param name="who">Who details.</param>
            <returns>Audit Header.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.CommitTransactionAsync(Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails)">
            <summary>
            Commits the transaction.
            </summary>
            <param name="auditHeader">Audit Header.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.RollbackTransaction">
            <summary>
            Rollbacks the Transaction.
            </summary>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.CreateCommitteeAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Committees.ICommittee)">
            <summary>
            Creates the Committee.
            </summary>
            <param name="who">Who details.</param>
            <param name="auditHeader">Audit Header.</param>
            <param name="committee">Committee.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.GetCommitteeByIdAsync(Agenda.Utilities.Models.Whos.IWho,System.Guid)">
            <summary>
            Gets the Committee by Id.
            </summary>
            <param name="who">Who details.</param>
            <param name="committeeId">Committee Id.</param>
            <returns>Committee.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.GetCommitteeByIdWithMeetingsAsync(Agenda.Utilities.Models.Whos.IWho,System.Guid)">
            <summary>
            Gets the Committee by Id with its meetings.
            </summary>
            <param name="who">Who details.</param>
            <param name="committeeId">Committee id.</param>
            <returns>Committee with Meetings.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.HaveCommitteesAsync(Agenda.Utilities.Models.Whos.IWho)">
            <summary>
            Checks if we have Committees.
            </summary>
            <param name="who">Who details.</param>
            <returns>True if Committees exist.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.UpdateCommitteeAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Committees.ICommittee)">
            <summary>
            Updates the Committee.
            </summary>
            <param name="who">Who details.</param>
            <param name="auditHeader">Audit Header.</param>
            <param name="committee">The committee.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.CreateMeetingAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Meetings.IMeeting)">
            <summary>
            Creates the Meeting.
            </summary>
            <param name="who">Who details.</param>
            <param name="auditHeader">Audit Header.</param>
            <param name="meeting">Meeting.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.GetMeetingByIdAsync(Agenda.Utilities.Models.Whos.IWho,System.Guid)">
            <summary>
            Gets the Meeting by Id.
            </summary>
            <param name="who">Who details.</param>
            <param name="meetingId">Meeting Id.</param>
            <returns>Meeting.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.GetRecentMeetingsMostRecentFirstAsync(Agenda.Utilities.Models.Whos.IWho,System.TimeSpan,System.Int32)">
            <summary>
            Gets the recent meetings with the most recent first.
            </summary>
            <param name="who">Who details.</param>
            <param name="timeSpan">The time span define what is recent.</param>
            <param name="maxNumberOfMeetings">The maximum number of meetings to return.</param>
            <returns>List of Meetings.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.UpdateMeetingAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Meetings.IMeeting)">
            <summary>
            Updates the Meeting.
            </summary>
            <param name="who">Who details.</param>
            <param name="auditHeader">Audit Header.</param>
            <param name="meeting">Meeting.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.CreateOrganisationAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Organisations.IOrganisation)">
            <summary>
            Creates the Organisation.
            </summary>
            <param name="who">Who details.</param>
            <param name="auditHeader">Audit Header.</param>
            <param name="organisation">Organisation.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.GetAllOrganisationsAsync(Agenda.Utilities.Models.Whos.IWho)">
            <summary>
            Gets all organisations.
            </summary>
            <param name="who">Who details.</param>
            <returns>List of Organisations.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.GetOrganisationByIdAsync(Agenda.Utilities.Models.Whos.IWho,System.Guid)">
            <summary>
            Gets the Organisation by Id.
            </summary>
            <param name="who">Who details.</param>
            <param name="organisationId">Organisation Id.</param>
            <returns>Organisation (Null=Not Found).</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.GetOrganisationByIdWithCommitteesAsync(Agenda.Utilities.Models.Whos.IWho,System.Guid)">
            <summary>
            Gets the Organisation by Id with its Committees.
            </summary>
            <param name="who">Who details.</param>
            <param name="organisationId">Organisation Id.</param>
            <returns>Organisation (Null=Not Found).</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.HaveOrganisationsAsync(Agenda.Utilities.Models.Whos.IWho)">
            <summary>
            Checks if we have Organisations.
            </summary>
            <param name="who">Who details.</param>
            <returns>True if Organisations exist.</returns>
        </member>
        <member name="M:Agenda.Data.Crud.IAgendaData.UpdateOrganisationAsync(Agenda.Utilities.Models.Whos.IWho,Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Domain.DomainObjects.Organisations.IOrganisation)">
            <summary>
            Updates the Organisation.
            </summary>
            <param name="who">Who details.</param>
            <param name="auditHeader">Audit Header.</param>
            <param name="organisation">Organisation.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="T:Agenda.Data.DbContexts.DataContext">
            <summary>
            Database Context.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext" />
            <summary>
            Database Context - DB Sets.
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
        </member>
        <member name="M:Agenda.Data.DbContexts.DataContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.DbContexts.DataContext"/> class.
            </summary>
            <param name="options">DBContext Options.</param>
        </member>
        <member name="M:Agenda.Data.DbContexts.DataContext.InvokeOnModelCreatingForAllDtos(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Invokes the on model creating for all dtos.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Agenda.Data.DbContexts.DataContext.DisableCascadeDelete(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Disables the cascade delete.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Agenda.Data.DbContexts.DataContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Override this method to further configure the model that was discovered by convention from the entity types
            exposed in dbset properties on your derived context. The resulting model may be cached
            and re-used for subsequent instances of your derived context.
            </summary>
            <param name="builder">The builder being used to construct the model for this context. Databases (and other extensions) typically
            define extension methods on this object that allow you to configure aspects of the model that are specific
            to a given database.</param>
            <exception cref="T:System.ArgumentNullException">modelBuilder.</exception>
            <remarks>
            If a model is explicitly set on the options for this context" />)
            then this method will not be run.
            </remarks>
        </member>
        <member name="P:Agenda.Data.DbContexts.DataContext.AuditDetails">
            <summary>
            Gets or sets the Audit Details.
            </summary>
        </member>
        <member name="P:Agenda.Data.DbContexts.DataContext.AuditHeaders">
            <summary>
            Gets or sets the Audit Headers.
            </summary>
        </member>
        <member name="P:Agenda.Data.DbContexts.DataContext.Committees">
            <summary>
            Gets or sets the Committees.
            </summary>
        </member>
        <member name="P:Agenda.Data.DbContexts.DataContext.Meetings">
            <summary>
            Gets or sets the Meetings.
            </summary>
        </member>
        <member name="P:Agenda.Data.DbContexts.DataContext.Organisations">
            <summary>
            Gets or sets the Organisations.
            </summary>
        </member>
        <member name="T:Agenda.Data.Dtos.AuditDetailDto">
            <summary>
            Audit Details DTO.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.AuditDetailDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.AuditDetailDto"/> class.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.AuditDetailDto.#ctor(System.Guid,System.Guid,System.String,System.String,System.Guid,System.String,System.String,Agenda.Domain.ValueObjects.Enums.DatabaseAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.AuditDetailDto"/> class.
            </summary>
            <param name="id">Audit Detail Id.</param>
            <param name="auditHeaderId">Audit Header Id.</param>
            <param name="tableName">Table Name.</param>
            <param name="columnName">Column Name.</param>
            <param name="recordId">Record Id.</param>
            <param name="oldValue">Old Value.</param>
            <param name="newValue">New Value.</param>
            <param name="databaseAction">Database Action.</param>
        </member>
        <member name="M:Agenda.Data.Dtos.AuditDetailDto.#ctor(System.Guid,System.Guid,System.String,System.String,System.Guid,System.String,System.String,Agenda.Domain.ValueObjects.Enums.DatabaseAction,Agenda.Data.Dtos.AuditHeaderDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.AuditDetailDto"/> class.
            </summary>
            <param name="id">Audit Detail Id.</param>
            <param name="auditHeaderId">Audit Header Id.</param>
            <param name="tableName">Table Name.</param>
            <param name="columnName">Column Name.</param>
            <param name="recordId">Record Id.</param>
            <param name="oldValue">Old Value.</param>
            <param name="newValue">New Value.</param>
            <param name="databaseAction">Database Action.</param>
            <param name="auditHeader">Audit Header.</param>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditDetailDto.Id">
            <summary>
            Gets the Audit Detail Id.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditDetailDto.AuditHeaderId">
            <summary>
            Gets the Audit Header Id.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditDetailDto.TableName">
            <summary>
            Gets the Table Name.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditDetailDto.ColumnName">
            <summary>
            Gets the Column Name.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditDetailDto.RecordId">
            <summary>
            Gets the Record Id.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditDetailDto.OldValue">
            <summary>
            Gets the Old Value.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditDetailDto.NewValue">
            <summary>
            Gets the New Value.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditDetailDto.DatabaseAction">
            <summary>
            Gets the Database Action.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditDetailDto.AuditHeader">
            <summary>
            Gets the Audit Header.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.AuditDetailDto.ToDto(Agenda.Domain.DomainObjects.AuditDetails.IAuditDetail)">
            <summary>
            Converts domain object to DTO.
            </summary>
            <param name="auditDetail">Audit Detail.</param>
            <returns>Audit Detail DTO.</returns>
        </member>
        <member name="T:Agenda.Data.Dtos.AuditHeaderDto">
            <summary>
            Audit Header DTO.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.AuditHeaderDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.AuditHeaderDto"/> class.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.AuditHeaderDto.#ctor(System.Guid,Agenda.Domain.ValueObjects.Enums.AuditEvent,System.DateTime,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.AuditHeaderDto"/> class.
            </summary>
            <param name="id">Audit Header Id.</param>
            <param name="auditEvent">Audit Event.</param>
            <param name="timeStamp">Time Stamp.</param>
            <param name="username">Username.</param>
            <param name="correlationId">Correlation Id.</param>
        </member>
        <member name="M:Agenda.Data.Dtos.AuditHeaderDto.#ctor(System.Guid,Agenda.Domain.ValueObjects.Enums.AuditEvent,System.DateTime,System.String,System.Guid,System.Collections.Generic.IList{Agenda.Data.Dtos.AuditDetailDto})">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.AuditHeaderDto"/> class.
            </summary>
            <param name="id">Audit Header Id.</param>
            <param name="auditEvent">Audit Event.</param>
            <param name="timeStamp">Time Stamp.</param>
            <param name="auditDetails">Audit Details.</param>
            <param name="username">Username.</param>
            <param name="correlationId">Correlation Id.</param>
        </member>
        <member name="M:Agenda.Data.Dtos.AuditHeaderDto.#ctor(Agenda.Domain.ValueObjects.Enums.AuditEvent,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.AuditHeaderDto"/> class.
            </summary>
            <param name="auditEvent">Audit Event.</param>
            <param name="username">Username.</param>
            <param name="correlationId">Correlation Id.</param>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditHeaderDto.Id">
            <summary>
            Gets Audit Header Id.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditHeaderDto.AuditEvent">
            <summary>
            Gets the Audit Event.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditHeaderDto.TimeStamp">
            <summary>
            Gets the Time Stamp.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditHeaderDto.Username">
            <summary>
            Gets the Username.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditHeaderDto.CorrelationId">
            <summary>
            Gets the Correlation Id.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.AuditHeaderDto.AuditDetails">
            <summary>
            Gets the Audit Details.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.AuditHeaderDto.ToDtoWithAuditDetails(Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails)">
            <summary>
            Converts to DTO with AuditDetails.
            </summary>
            <param name="auditHeader">Audit Header.</param>
            <returns>Audit Header DTO with Audit Details.</returns>
        </member>
        <member name="T:Agenda.Data.Dtos.BaseDto">
            <summary>
            Base class for DTOs.
            </summary>
        </member>
        <member name="T:Agenda.Data.Dtos.CommitteeDto">
            <summary>
            Committee DTO.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.CommitteeDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.CommitteeDto"/> class.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.CommitteeDto.#ctor(System.Guid,System.Guid,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.CommitteeDto"/> class.
            </summary>
            <param name="id">Committee Id.</param>
            <param name="organisationId">Organisation Id.</param>
            <param name="name">Committee Name.</param>
            <param name="description">Committee Description.</param>
        </member>
        <member name="M:Agenda.Data.Dtos.CommitteeDto.#ctor(System.Guid,System.Guid,System.String,System.String,Agenda.Data.Dtos.OrganisationDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.CommitteeDto"/> class.
            </summary>
            <param name="id">Committee Id.</param>
            <param name="organisationId">Organisation Id.</param>
            <param name="name">Committee Name.</param>
            <param name="description">Committee Description.</param>
            <param name="organisation">Organisation.</param>
        </member>
        <member name="P:Agenda.Data.Dtos.CommitteeDto.Id">
            <summary>
            Gets the Committee Id.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.CommitteeDto.OrganisationId">
            <summary>
            Gets the Organisation Id.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.CommitteeDto.Name">
            <summary>
            Gets the Committee Name.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.CommitteeDto.Description">
            <summary>
            Gets the Committee Description.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.CommitteeDto.Organisation">
            <summary>
            Gets the Organisation.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.CommitteeDto.Meetings">
            <summary>
            Gets the Meetings.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.CommitteeDto.ToDto(Agenda.Domain.DomainObjects.Committees.ICommittee)">
            <summary>
            Converts domain object to DTO.
            </summary>
            <param name="committee">Committee.</param>
            <returns>Committee DTO.</returns>
        </member>
        <member name="M:Agenda.Data.Dtos.CommitteeDto.ToDomain">
            <summary>
            Converts instance to domain object.
            </summary>
            <returns>Committee.</returns>
        </member>
        <member name="M:Agenda.Data.Dtos.CommitteeDto.ToDomainWithMeetings">
            <summary>
            Converts instance to domain object with meetings.
            </summary>
            <returns>Committee with Meetings.</returns>
        </member>
        <member name="T:Agenda.Data.Dtos.MeetingDto">
            <summary>
            Organiser DTO.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.MeetingDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.MeetingDto"/> class.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.MeetingDto.#ctor(System.Guid,System.Guid,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.MeetingDto"/> class.
            </summary>
            <param name="id">Meeting Id.</param>
            <param name="committeeId">Committee Id.</param>
            <param name="meetingDateTime">Date and Time of the Meeting.</param>
        </member>
        <member name="M:Agenda.Data.Dtos.MeetingDto.#ctor(System.Guid,System.Guid,System.DateTime,Agenda.Data.Dtos.CommitteeDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.MeetingDto"/> class.
            </summary>
            <param name="id">Meeting Id.</param>
            <param name="committeeId">Committee Id.</param>
            <param name="meetingDateTime">Date and Time of the Meeting.</param>
            <param name="committee">Committee.</param>
        </member>
        <member name="P:Agenda.Data.Dtos.MeetingDto.Id">
            <summary>
            Gets the Meeting Id.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.MeetingDto.CommitteeId">
            <summary>
            Gets the Committee Id.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.MeetingDto.MeetingDateTime">
            <summary>
            Gets the Date and Time of the Meeting.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.MeetingDto.Committee">
            <summary>
            Gets the Committee.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.MeetingDto.ToDto(Agenda.Domain.DomainObjects.Meetings.IMeeting)">
            <summary>
            Converts domain object to DTO.
            </summary>
            <param name="meeting">Meeting.</param>
            <returns>Organisation DTO.</returns>
        </member>
        <member name="M:Agenda.Data.Dtos.MeetingDto.ToDomain">
            <summary>
            Converts instance to domain object.
            </summary>
            <returns>Meeting.</returns>
        </member>
        <member name="T:Agenda.Data.Dtos.OrganisationDto">
            <summary>
            Organiser DTO.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.OrganisationDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.OrganisationDto"/> class.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.OrganisationDto.#ctor(System.Guid,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Dtos.OrganisationDto"/> class.
            </summary>
            <param name="id">Organisation Id.</param>
            <param name="code">Organisation Code.</param>
            <param name="name">Organisation Name.</param>
            <param name="bgColour">Background Colour.</param>
        </member>
        <member name="P:Agenda.Data.Dtos.OrganisationDto.Id">
            <summary>
            Gets the Organisation Id.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.OrganisationDto.Code">
            <summary>
            Gets the Organisation Code.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.OrganisationDto.Name">
            <summary>
            Gets the Organisation Name.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.OrganisationDto.BgColour">
            <summary>
            Gets the Background Colour.
            </summary>
        </member>
        <member name="P:Agenda.Data.Dtos.OrganisationDto.Committees">
            <summary>
            Gets the Committees.
            </summary>
        </member>
        <member name="M:Agenda.Data.Dtos.OrganisationDto.ToDto(Agenda.Domain.DomainObjects.Organisations.IOrganisation)">
            <summary>
            Converts domain object to DTO.
            </summary>
            <param name="organisation">Organisation.</param>
            <returns>Organisation DTO.</returns>
        </member>
        <member name="M:Agenda.Data.Dtos.OrganisationDto.ToDomain">
            <summary>
            Converts instance to domain object.
            </summary>
            <returns>Organisation.</returns>
        </member>
        <member name="M:Agenda.Data.Dtos.OrganisationDto.ToDomainWithCommittees">
            <summary>
            Converts to domain object with committees.
            </summary>
            <returns>Organisation with Committees.</returns>
        </member>
        <member name="T:Agenda.Data.Extensions.ReflectionExtensions">
            <summary>
            Reflection Extension methods.
            </summary>
        </member>
        <member name="M:Agenda.Data.Extensions.ReflectionExtensions.IsCollection(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether this instance is a collection.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
              <c>true</c> if the specified instance is collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Agenda.Data.Extensions.ReflectionExtensions.GetAttributes(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets the attributes.
            </summary>
            <param name="instance">The Instance.</param>
            <returns>Property Attributes.</returns>
        </member>
        <member name="T:Agenda.Data.Extensions.ReflectionExtensions.PropertyAttributes">
            <summary>
            Class detailing the known property attributes.
            </summary>
        </member>
        <member name="M:Agenda.Data.Extensions.ReflectionExtensions.PropertyAttributes.#ctor(Agenda.Data.Attributes.AuditIgnoreAttribute,System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute,System.ComponentModel.DataAnnotations.KeyAttribute,System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute,System.ComponentModel.DataAnnotations.RangeAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Agenda.Data.Extensions.ReflectionExtensions.PropertyAttributes"/> class.
            </summary>
            <param name="auditIgnore">Audit Ignore attribute.</param>
            <param name="foreignKey">Foreign Key attribute.</param>
            <param name="key">Key attribute.</param>
            <param name="notMapped">Not Mapped attribute.</param>
            <param name="range">Range attribute.</param>
        </member>
        <member name="P:Agenda.Data.Extensions.ReflectionExtensions.PropertyAttributes.AuditIgnore">
            <summary>
            Gets the Audit Ignore attribute.
            </summary>
        </member>
        <member name="P:Agenda.Data.Extensions.ReflectionExtensions.PropertyAttributes.ForeignKey">
            <summary>
            Gets the Foreign Key attribute.
            </summary>
        </member>
        <member name="P:Agenda.Data.Extensions.ReflectionExtensions.PropertyAttributes.Key">
            <summary>
            Gets the key attribute.
            </summary>
        </member>
        <member name="P:Agenda.Data.Extensions.ReflectionExtensions.PropertyAttributes.NotMapped">
            <summary>
            Gets the Not Mapped attribute.
            </summary>
        </member>
        <member name="P:Agenda.Data.Extensions.ReflectionExtensions.PropertyAttributes.Range">
            <summary>
            Gets the range attribute.
            </summary>
        </member>
        <member name="T:Agenda.Data.Resources.ExceptionResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Agenda.Data.Resources.ExceptionResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Agenda.Data.Resources.ExceptionResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Agenda.Data.Resources.ExceptionResource.CannotConvertTo___If___IsNull">
            <summary>
              Looks up a localized string similar to Cannot convert to {0} if {1} is Null.
            </summary>
        </member>
        <member name="T:Agenda.Data.Resources.LoggerResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Agenda.Data.Resources.LoggerResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Agenda.Data.Resources.LoggerResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Agenda.Data.Resources.LoggerResources.___EntryBy___">
            <summary>
              Looks up a localized string similar to {Method} ENTRY by {@Who}.
            </summary>
        </member>
        <member name="T:Agenda.Data.Utilities.Audit">
            <summary>
            Audit routines.
            </summary>
        </member>
        <member name="M:Agenda.Data.Utilities.Audit.AuditCreate(Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,Agenda.Data.Dtos.BaseDto,System.Guid)">
            <summary>
            Audits the create.
            </summary>
            <param name="auditHeader">Audit Header.</param>
            <param name="newObject">New value.</param>
            <param name="recordId">Record Id.</param>
        </member>
        <member name="M:Agenda.Data.Utilities.Audit.AuditUpdate(Agenda.Domain.DomainObjects.AuditHeaders.IAuditHeaderWithAuditDetails,System.Guid,Agenda.Data.Dtos.BaseDto,Agenda.Data.Dtos.BaseDto)">
            <summary>
            Audits the update.
            </summary>
            <param name="auditHeader">Audit Header.</param>
            <param name="recordId">Record Id.</param>
            <param name="oldObject">Old Value.</param>
            <param name="newObject">New Value.</param>
        </member>
        <member name="T:Agenda.Data.Utilities.CompareNullable">
            <summary>
            Compare routines that handles if one/both of the values are null.
            </summary>
        </member>
        <member name="M:Agenda.Data.Utilities.CompareNullable.AreEqual(System.String,System.String)">
            <summary>
            Compares two string values.
            </summary>
            <param name="a">1st value.</param>
            <param name="b">2nd value.</param>
            <returns>Returns true if the values are equal.</returns>
        </member>
        <member name="M:Agenda.Data.Utilities.CompareNullable.AreEqual(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Compares two integer values.
            </summary>
            <param name="a">1st value.</param>
            <param name="b">2nd value.</param>
            <returns>Returns true if the values are equal.</returns>
        </member>
        <member name="M:Agenda.Data.Utilities.CompareNullable.AreEqual(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Compares two decimal values.
            </summary>
            <param name="a">1st value.</param>
            <param name="b">2nd value.</param>
            <returns>Returns true if the values are equal.</returns>
        </member>
        <member name="M:Agenda.Data.Utilities.CompareNullable.AreEqual(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Compares two datetime values.
            </summary>
            <param name="a">1st value.</param>
            <param name="b">2nd value.</param>
            <returns>Returns true if the values are equal.</returns>
        </member>
        <member name="T:Agenda.Data.Utilities.PropertyUtilities">
            <summary>
            Property Utilities.
            </summary>
        </member>
        <member name="M:Agenda.Data.Utilities.PropertyUtilities.IsAuditableColumn(System.ComponentModel.PropertyDescriptorCollection,System.Reflection.PropertyInfo)">
            <summary>
            Determines whether [is auditable column] [the specified property descriptors].
            </summary>
            <param name="propertyDescriptors">Property Descriptors.</param>
            <param name="propertyInfo">Property Information.</param>
            <returns>
              <c>true</c> if [is auditable column] [the specified property descriptors]; otherwise, <c>false</c>.
            </returns>
        </member>
    </members>
</doc>
