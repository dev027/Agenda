@using Agenda.Web.Models
@using Metadata = Agenda.Domain.DomainObjects.Locations.DomainMetadata
@model Agenda.Web.ViewModels.Location.EditViewModel

@section BreadCrumb
{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <i class="@Icon.Organisation"></i>
                <a asp-controller="OrganisationOverview"
                   asp-action="Index">Organisations</a>
            </li>
            <li class="breadcrumb-item">
                <a asp-controller="Organisation"
                   asp-action="Index"
                   asp-route-organisationId="@Model.OrganisationId">
                    @Model.OrganisationName
                </a>
            </li>
            <li class="breadcrumb-item">
                <i class="@Icon.Location"></i>
                <a asp-controller="LocationOverview"
                   asp-action="Index"
                   asp-route-organisationId="@Model.OrganisationId">Locations</a>
            </li>
            <li class="breadcrumb-item active">@Model.Name</li>
        </ol>
    </nav>
    <nav class="actionsnavbar">
        <div class="list-group list-group-horizontal">
            <a class="list-group-item list-group-item-info"
               asp-controller="Home"
               asp-action="Index">
                <i class="@Icon.Dashboard"></i> Dashboard
            </a>
        </div>
    </nav>
}

<main class="container-fluid flex-grow-1">
    <div class="row justify-content-center">
        <div class="col-12 col-sm-9 col-md-7 col-lg-5 col-xl-4">
            <div class="card card-default">
                <div class="card-header"><h4><i class="@Icon.Location"></i> Edit Location</h4></div>
                <div class="card-body">
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger alert-dismissible fade show">
                            <button type="button" class="close" data-dismiss="alert" aria-label="close">&times;</button>
                            @Html.ValidationSummary(false, "Errors: ")
                        </div>
                    }
                    @using (Html.BeginForm("Edit", "Location", FormMethod.Post))
                    {
                        <input type="hidden" value="@FormState.SubmittedBySubmitButton" name="FormState" />
                        <input type="hidden" value="@Model.LocationId" name="LocationId" />

                        <div class="form-group">
                            @Html.LabelFor(m => m.OrganisationName)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <a class="btn btn-secondary"
                                       asp-controller="Organisation"
                                       asp-action="Index"
                                       asp-route-organisationid="@Model.OrganisationId">
                                        <span class="@Icon.Organisation"></span>
                                    </a>
                                </div>
                                @Html.TextBoxFor(m => m.OrganisationName,
                                    Model.OrganisationName,
                                    new
                                    {
                                        @class = "form-control",
                                        @readonly = "readonly"
                                    })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Name)
                            @Html.TextBoxFor(m => m.Name,
                                Model.Name,
                                new
                                {
                                    @class = "form-control",
                                    maxLength = Metadata.Name.MaxLength
                                })
                            @Html.ValidationMessageFor(m => m.Name, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Address)
                            @Html.TextBoxFor(m => m.Address,
                                Model.Address,
                                new
                                {
                                    @class = "form-control",
                                    maxLength = Metadata.Address.MaxLength
                                })
                            @Html.ValidationMessageFor(m => m.Address, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.What3WordsPart1)
                            <div class="d-flex flex-row">
                                <div>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><img src="/img/what3word-logo.svg" alt="@Metadata.What3Words.Prefix" style="width: 1.5rem;" /></span>
                                        </div>
                                        @Html.TextBoxFor(m => m.What3WordsPart1,
                                            Model.What3WordsPart1,
                                            new
                                            {
                                                @class = "form-control",
                                                maxLength = Metadata.What3Words.Part.MaxLength
                                            })
                                    </div>

                                    @Html.ValidationMessageFor(m => m.What3WordsPart1, null, new { @class = "text-danger" })
                                </div>
                                <div>&nbsp;@Metadata.What3Words.Separator&nbsp;</div>
                                <div>
                                    @Html.TextBoxFor(m => m.What3WordsPart2,
                                        Model.What3WordsPart2,
                                        new
                                        {
                                            @class = "form-control",
                                            maxLength = Metadata.What3Words.Part.MaxLength
                                        })

                                    @Html.ValidationMessageFor(m => m.What3WordsPart2, null, new { @class = "text-danger" })
                                </div>
                                <div>&nbsp;@Metadata.What3Words.Separator&nbsp;</div>
                                <div>
                                    @Html.TextBoxFor(m => m.What3WordsPart3,
                                        Model.What3WordsPart3,
                                        new
                                        {
                                            @class = "form-control",
                                            maxLength = Metadata.What3Words.Part.MaxLength
                                        })
                                    @Html.ValidationMessageFor(m => m.What3WordsPart3, null, new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group d-flex flex-row">
                            <div>
                                @Html.LabelFor(m => m.Latitude)
                                @Html.TextBoxFor(m => m.Latitude, Model.Latitude.ToString(), new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Latitude, null, new { @class = "text-danger" })
                            </div>
                            <div>
                                @Html.LabelFor(m => m.Longitude)
                                @Html.TextBoxFor(m => m.Longitude, Model.Longitude.ToString(), new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Longitude, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <button class="btn btn-primary" type="submit">
                            <span class="@Icon.Save"></span>
                            Save Location
                        </button>
                        <a class="btn btn-secondary"
                           type="button"
                           asp-controller="Location"
                           asp-action="Index"
                           asp-route-locationId="@Model.LocationId">
                            <span class="@Icon.Cancel"></span>
                            Cancel
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</main>